<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAABGdBTUEAALGPC/xhBQAAAYlQTFRF////
        5+P6+fn5/8mg/+O7ZW3gO53/ZWSJPTpm+McA+qoA/6eH083w/9au++C66OT6VliF8O76/7iU/sGCUlF4
        4Nz2/dyY+qUAMpr/XWbfXF2H/e/DOzdf/ujDYGnf7+z6UobwxbOm+c9L+7hL2NX3KZf/ZGOJ/+i9/csA
        /8ab/86iNTZohqvAm4dniGVNWmrknIKo/6qBw8byhYvmpansSqT/Z2CAWV69LC9j//n1+fj+/8yZ4e36
        kpXogLv9ttf/bnXixd//lMb/VV/eTobQVH2+T1GeX22bdn3jSkuPYmnXVViv2Or/QkF4fXiQ38iw/vfd
        /OitS1CD/9/I/+zeb7X/r7PtmZ7qQpXtUYLJisH/YGuYdbf/pc//t7rwrZ+fk4mXYFNugWt4qYmEz6WQ
        6Lia1sGtlHl9vaylwpuMaabOh3q1PZvrqbOU48Ik6aMh7td/+9tu/Mpz+75Ul5auwsHPq6m6/9nN/7+p
        /9HC96OKg3jRfKrml3/Ika7dqIW/pLPTt4u2xpCs0HxxwwAADNVJREFUeF7tnYtbVMcZh7m4QFBcoF72
        EDxoAxiWtlYB4xKUu2AUNCpCTdTEW2pr0zStvRibtP3LO3POb3fP3OfsZXbG8D4+T5C4O/M+3zffd86c
        helyQs/S6vLatb0FwtnCyvb21f0HlyYnevB/Q2dp+eFe39TUVKlU6iOcLRQKcRxHUbRemJu/NIF/FSqL
        qw8XSsSNqgFqWIWKbu8fW8S/Do/VL/umsnIJWUMKsYyvHsMrguLWGgkerLLwhhQSyvluvC4UVvekegSZ
        ISGK5ibx2hBYXlD5KQ1pILcv4fW+s7owBRsZSkPquBJCHG/t6fy0hsRxfc779bimzs8UrSGN47zXzWN1
        weBnNCQ1x+dUfahP0ASjIUnVfbyfbyxpKwxYOBtDREO0XcR7esVynzZDDw42Nje3trbu7uzcuHH95ief
        wUZKHHvYONY0AdzY3Orvv3z5cj/hxMDAwDhlYOe6RnN9Hu/rDddUgge/24JbCjUERHPnpkoy8msxLqqa
        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
</value>
  </data>
  <metadata name="clientEntityBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>264, 17</value>
  </metadata>
  <metadata name="applicationDbContextBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>